# 51 times the same aggr to trigger the optimiser
aggregate
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
    (foo|bar)\.(.+)
	every 1 seconds
	expire after 2 seconds
	compute sum write to
		\1
	stop;

aggregate
    dothework.(foo|bar)\.(.+)
    somethingelse.dothework\.(.+)
	more.dothework.(yo.)
	a.nonmatching.thing
	whatever.dothework.(yo.)
	every 1 seconds
	expire after 2 seconds
	compute sum write to
		\1
	stop;
